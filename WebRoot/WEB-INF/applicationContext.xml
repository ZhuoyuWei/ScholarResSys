<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context     
    http://www.springframework.org/schema/context/spring-context-3.2.xsd    
    http://www.springframework.org/schema/aop    
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd    
    http://www.springframework.org/schema/tx    
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	<!--Beans-->
	


	  <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<!-- 指定连接数据库的驱动 -->
		<property name="driverClass" value="org.mariadb.jdbc.Driver"/>
		<!-- 指定连接数据库的URL -->
		<property name="jdbcUrl" value="jdbc:mariadb://114.112.63.174:3306/scholarrecsys"/>
		<!-- 指定连接数据库的用户名 -->
		<property name="user" value="root"/>
		<!-- 指定连接数据库的密码 -->
		<property name="password" value="doododAAAAA"/>
		<!-- 指定连接数据库连接池的最大连接数 -->
		<property name="maxPoolSize" value="40"/>
		<!-- 指定连接数据库连接池的最小连接数 -->
		<property name="minPoolSize" value="1"/>
		<!-- 指定连接数据库连接池的初始化连接数 -->
		<property name="initialPoolSize" value="1"/>
		<!-- 指定连接数据库连接池的连接的最大空闲时间 -->
		<property name="maxIdleTime" value="20"/>
	</bean>

	
    
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 依赖注入数据源，注入正是上面定义的dataSource -->
		<property name="dataSource" ref="dataSource"/>
		<!-- mappingResouces属性用来列出全部映射文件 -->
		<property name="mappingResources">
			<list>
				<!-- 以下用来列出Hibernate映射文件 -->
				<value>org/crazyit/app/domain/News.hbm.xml</value>
				<value>org/crazyit/app/domain/Person.hbm.xml</value>	
				<value>com/po/ScholarUser.hbm.xml</value>
				<value>com/po/InterestGroup.hbm.xml</value>
				<value>com/po/Item.hbm.xml</value>	
				<value>com/po/Comment.hbm.xml</value>	
				<value>com/po/ScholarTweet.hbm.xml</value>		
				<value>com/po/Keyword.hbm.xml</value>	
								
				<value>weibo4j/model/User.hbm.xml</value>
				<value>weibo4j/http/AccessToken.hbm.xml</value>															
			</list>
		</property>
		
		
		
		
		<!-- 定义Hibernate的SessionFactory的属性 -->
		
		<property name="hibernateProperties">
			<!-- 配置Hibernate属性 -->
			<value>
			hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
			hibernate.hbm2ddl.auto=update
			hibernate.show_sql=true
			hibernate.format_sql=true;
			</value>
		</property>
	</bean>
	<!-- 声明式事务 --> 
    <bean id="transactionManager"  class="org.springframework.orm.hibernate4.HibernateTransactionManager"> 
        <property name="sessionFactory" ref="sessionFactory" /> 
    </bean> 

	    <tx:annotation-driven transaction-manager="transactionManager" />
	
	  
	<tx:advice id="txAdvice" transaction-manager="transactionManager">  
        <tx:attributes>  
                        <tx:method name="save*" propagation="REQUIRED" />  
            <tx:method name="add*" propagation="REQUIRED" />  
            <tx:method name="create*" propagation="REQUIRED" />  
            <tx:method name="insert*" propagation="REQUIRED" />  
            <tx:method name="update*" propagation="REQUIRED" />  
            <tx:method name="merge*" propagation="REQUIRED" />  
            <tx:method name="del*" propagation="REQUIRED" />  
            <tx:method name="remove*" propagation="REQUIRED" />  
            <tx:method name="put*" propagation="REQUIRED" />  
            <tx:method name="use*" propagation="REQUIRED" />  
            <!--hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到 -->  
            <tx:method name="get*" propagation="REQUIRED" read-only="true" />  
            <tx:method name="count*" propagation="REQUIRED" read-only="true" />  
            <tx:method name="find*" propagation="REQUIRED" read-only="true" />  
            <tx:method name="list*" propagation="REQUIRED" read-only="true" />  
            <tx:method name="*"   read-only="true" />  
        </tx:attributes>  
    </tx:advice>  
    
   <!--  <aop:config expose-proxy="true">   
        <aop:pointcut id="txPointcut"  
            expression="execution(* org.crazyit.app.dao.*.*(..))" />  
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />  
    </aop:config>  -->
    
     <!--  <aop:config>    
   	 	<aop:advisor pointcut="execution(* *.*(..))" advice-ref="txAdvise" />    
    </aop:config>-->   
    
      <aop:config>
	   <aop:pointcut id="servicesPointcut" expression="execution(* com.dao.impl.*.*(..))" />
	   <aop:advisor advice-ref="txAdvice" pointcut-ref="servicesPointcut" />  
	</aop:config>   
	
	
	
	
	
	<!-- Dao Beans -->
	<bean id="personDao" 	class="org.crazyit.app.dao.impl.PersonDaoHibernate">
		<!-- 注入持久化操作所需的SessionFactory -->
		<!--  <property name="sessionFactory" ref="sessionFactory"/>-->
		<property name="transactionManager" ref="transactionManager"/>
	</bean>
	<bean id="scholarUserDao" class="com.dao.impl.ScholarUserDaoImpl">
		<property name="transactionManager" ref="transactionManager"/>
	</bean>
	<bean id="itemDao" class="com.dao.impl.ItemDaoImpl">
		<property name="transactionManager" ref="transactionManager"/>	
	</bean>
	<bean id="scholarTweetDao" class="com.dao.impl.ScholarTweetDaoImpl">
		<property name="transactionManager" ref="transactionManager"/>	
	</bean>
	
	<!-- Service Beans -->
	<bean id="accountService" class="com.service.impl.AccountServiceImpl">
		<property name="scholarUserDao" ref="scholarUserDao"/>
	</bean>
	<bean id="infoService" class="com.service.impl.InfoServiceImpl">
		<property name="scholarUserDao" ref="scholarUserDao"/>
		<property name="itemDao" ref="itemDao"/>
		<property name="scholarTweetDao" ref="scholarTweetDao"/>	
	</bean>
	<bean id="itemService" class="com.service.impl.ItemServiceImpl">
		<property name="itemDao" ref="itemDao"/>
		<property name="scholarUserDao" ref="scholarUserDao"/>
	</bean>
	<bean id="friendService" class="com.service.impl.FriendServiceImpl">
		<property name="scholarUserDao" ref="scholarUserDao"/>
	</bean>
	
	<!-- Action Beans -->
	<bean id="loginAction" class="com.actions.LoginAction">
		<property name="loginInfo" value=""/>
		<property name="personDao" ref="personDao"/>
		<property name="accountService" ref="accountService"/>
		<property name="itemService" ref="itemService"/>
	</bean>
	<bean id="registerAction" class="com.actions.RegisterAction">
		<property name="registerInfo" value=""/>
		<property name="accountService" ref="accountService"/>		
	</bean>
	<bean id="homeAction" class="com.actions.HomeAction">
		<property name="infoService" ref="infoService"/>
		<property name="accountService" ref="accountService"/>
		<property name="friendService" ref="friendService"/>
	</bean>
	<bean id="itemAction" class="com.actions.ItemAction">
		<property name="itemService" ref="itemService"/>
		<property name="infoService" ref="infoService"/>
		<property name="accountService" ref="accountService"/>
	</bean>
	<bean id="friendAction" class="com.actions.FriendAction">
		<property name="friendService" ref="friendService"/>
		<property name="accountService" ref="accountService"/>
	</bean>
	<bean id="dataAction" class="com.actions.DataAction">
		<property name="itemService" ref="itemService"/>
		<property name="accountService" ref="accountService"></property>
	</bean>
	
	
</beans>
