{"about_the_course":"<p>Computation and simulation are increasingly important in all aspects of\n    science and engineering. At the same time writing efficient computer programs\n    to take full advantage of current computers is becoming increasingly difficult.\n    Even laptops now have 4 or more processors, but using them all to solve\n    a single problem faster often requires rethinking the algorithm to introduce\n    parallelism, and then programming in a language that can express this parallelism.&nbsp;\n    Writing efficient programs also requires some knowledge of machine arithmetic,\n    computer architecture, and memory hierarchies.</p>\n<p>Although parallel computing will be covered, this is <i>not</i> a class\n    on the most advanced techniques for using supercomputers, which these days\n    have tens of thousands of processors and cost millions of dollars. Instead,\n    the goal is to teach tools that you can use immediately on your own laptop,\n    desktop, or a small cluster. Cloud computing will also be discussed, and\n    students who don't have a multiprocessor computer of their own will still\n    be able to do projects using Amazon Web Services at very low cost.</p>\n<p>Along the way there will also be discussion of software engineering tools\n    such as debuggers, unit testing, Makefiles, and the use of version control\n    systems. After all, your time is more valuable than computer time, and\n    a program that runs fast is totally useless if it produces the wrong results.</p>\n<p>High performance <i>programming</i> is also an important aspect of high\n    performance scientific computing, and so another main theme of the course\n    is the use of basic tools and techniques to improve your efficiency as\n    a computational scientist.</p>","subtitle_languages_csv":"","other_description":"","photo":"https://coursera-course-photos.s3.amazonaws.com/1a/3aad2cea79bbc570d040e889edb2fb/HighPerformanceComputingIma.jpg","preview_link":null,"small_icon_hover":"https://coursera-course-photos.s3.amazonaws.com/00/621b9b2597807229ed0fa605f96cdc/HighPerformanceComputingIma.jpg","large_icon":"https://coursera-course-photos.s3.amazonaws.com/7b/3247a51d254d7f0c68062147957e53/HighPerformanceComputingIma.jpg","video":"1m32LiqOlj0","university-ids":["uw"],"video_baseurl":"https://d1a2y8pfnfh44t.cloudfront.net/1m32LiqOlj0/","id":119,"universities":[{"rectangular_logo_svg":"","wordmark":null,"website_twitter":"UW","china_mirror":1,"favicon":"https://coursera-university-assets.s3.amazonaws.com/98/7480c1f9271144aa75fe024a1ad5a0/favicon-uw.ico","website_facebook":"UofWA","logo":"https://coursera-university-assets.s3.amazonaws.com/53/2f0ff155b3390e3d7190c363a4a045/uw-logo-coursera-transparent.png","background_color":"","id":15,"location_city":"Seattle","location_country":"US","location_lat":47.60620950000000000,"location":"Seattle, WA","primary_color":"#38255A","abbr_name":"Washington","website":"https://www.washington.edu/","description":"Founded in 1861, the University of Washington is one of the oldest state-supported institutions of higher education on the West Coast and is one of the preeminent research universities in the world.","short_name":"uw","landing_page_banner":"https://coursera-university-assets.s3.amazonaws.com/d0/f1be9c6b196a5a0446da96548a85b6/banner-uw1.jpg","mailing_list_id":null,"website_youtube":"user/uwhuskies","partner_type":1,"banner":"https://coursera-university-assets.s3.amazonaws.com/5d/7f56a74b7b3009b4a888e372a41f67/banner-uw1.jpg","location_state":"WA","name":"University of Washington","square_logo":"https://coursera-university-assets.s3.amazonaws.com/8a/903cf68039c31a207eb7eafff458f7/w-patch-purple.png","square_logo_source":"https://coursera-university-assets.s3.amazonaws.com/76/45ce3d3eba0b28c763eacbb2387322/w-patch-purple.png","square_logo_svg":"","location_lng":-122.33207080000000000,"home_link":null,"class_logo":"","display":true}],"self_service_course_id":null,"short_description":"Programming-oriented course on effectively using modern computers to solve scientific computing problems arising in the physical/engineering sciences and other fields. Provides an introduction to efficient serial and parallel computing using Fortran 90, OpenMP, MPI, and Python, and software development tools such as version control, Makefiles, and debugging.","description":"","short_name":"scicomp","target_audience":0,"faq":"","category-ids":["infotech","stats"],"visibility":0,"course_syllabus":"<p>The use of a variety of languages and techniques will be integrated throughout\n    the course as much as possible, rather than taught linearly. The topics\n    below will be covered at an introductory level, with the goal of learning\n    enough to feel comfortable starting to use them in your everyday work.\n    Once you've reached that level, abundant resources are available on the\n    web to learn the more advanced features that are most relevant for you.</p>\n<ul>\n    <li>Working at the command line in Unix-like shells (e.g. Linux or a Mac OSX\n        terminal).</li>\n    <li>Version control systems, particularly git, and the use of Github and Bitbucket\n        repositories.</li>\n    <li>Work habits for documentation of your code and reproducibility of your\n        results.</li>\n    <li>Interactive Python using IPython, and the IPython Notebook.</li>\n    <li>Python scripting and its uses in scientific computing.</li>\n    <li>Subtleties of computer arithmetic that can affect program correctness.</li>\n    <li>How numbers are stored: binary vs. ASCII representations, efficient I/O.</li>\n    <li>Fortran 90, a compiled language that is widely used in scientific computing.</li>\n    <li>Makefiles for building software and checking dependencies.</li>\n    <li>The high cost of data communication.&nbsp; Registers, cache, main memory,\n        and how this memory hierarchy affects code performance.&nbsp;</li>\n    <li>OpenMP on top of Fortran for parallel programming of shared memory computers,\n        such as a multicore laptop.</li>\n    <li>&nbsp;MPI on top of Fortran for distributed memory parallel programming,\n        such as on a cluster.</li>\n    <li>Parallel computing in IPython.</li>\n    <li>Debuggers, unit tests, regression tests, verification and validation of\n        computer codes.</li>\n    <li>Graphics and visualization of computational results using Python.</li>\n</ul>","course_format":"<p>The class will consist of lecture videos with integrated quiz questions.\n    There will also be programming assignments that are not part of the lectures\n    and optional reading material.</p>","has_full_data":true,"small_icon":"https://coursera-course-photos.s3.amazonaws.com/00/621b9b2597807229ed0fa605f96cdc/HighPerformanceComputingIma.jpg","suggested_readings":"<p>Course notes will be provided to compliment lectures. The notes and slides\n    from lectures will also contain many references to other free resources\n    on the web, along with some recommended books on the topics covered.</p>","instructor":"Randall J. LeVeque ","categories":[{"id":4,"name":"Information, Tech & Design","mailing_list_id":null,"short_name":"infotech","description":"Our wide range of courses allows students to explore topics from many different fields of study. Sign up for a class today and join our global community of students and scholars!"},{"id":16,"name":"Statistics and Data Analysis","mailing_list_id":null,"short_name":"stats","description":"Our wide range of courses allows students to explore topics from many different fields of study. Sign up for a class today and join our global community of students and scholars!"}],"estimated_class_workload":"5-10 hours/week","name":"High Performance Scientific Computing","language":"en","university_logo_st":null,"video_id":null,"courses":[{"grading_policy_distinction":"","ace_track_price_display":null,"signature_track_certificate_design_id":null,"ace_semester_hours":null,"start_day":1,"duration_string":"10 weeks","signature_track_last_chance_time":null,"signature_track_additional_notes":"","certificate_ready_user_id":null,"id":318,"start_month":5,"certificate_description":"","start_date_string":"","chegg_session_id":"","signature_track_regular_price":null,"grades_release_date":null,"certificates_ready":false,"signature_track_price":null,"statement_design_id":null,"signature_track_registration_open":false,"topic_id":119,"eligible_for_signature_track":false,"start_date":null,"status":0,"start_year":2013,"signature_track_certificate_combined_signature":"","end_date":null,"notified_subscribers":true,"instructors":[1320364],"end_of_class_emails_sent":null,"active":true,"eligible_for_certificates":false,"signature_track_certificate_signature_blurb":"","deployed":true,"ace_close_date":null,"name":"001","textbooks":[],"signature_track_open_time":null,"eligible_for_ACE":false,"grading_policy_normal":"","ace_open_date":null,"signature_track_last_refund_date":null,"home_link":"https://class.coursera.org/scicomp-001/","creator_id":null,"proctored_exam_completion_date":null,"university_logo":null,"signature_track_close_time":null,"auth_review_completion_date":null},{"grading_policy_distinction":"","ace_track_price_display":null,"signature_track_certificate_design_id":null,"ace_semester_hours":null,"start_day":31,"duration_string":"10 weeks","signature_track_last_chance_time":null,"signature_track_additional_notes":null,"certificate_ready_user_id":null,"id":971143,"start_month":3,"certificate_description":"","start_date_string":null,"chegg_session_id":"","signature_track_regular_price":null,"grades_release_date":null,"certificates_ready":false,"signature_track_price":null,"statement_design_id":null,"signature_track_registration_open":false,"topic_id":119,"eligible_for_signature_track":false,"start_date":null,"status":1,"start_year":2014,"signature_track_certificate_combined_signature":"","end_date":null,"notified_subscribers":true,"instructors":[1320364],"end_of_class_emails_sent":null,"active":false,"eligible_for_certificates":false,"signature_track_certificate_signature_blurb":"","deployed":true,"ace_close_date":null,"name":"002","textbooks":[],"signature_track_open_time":null,"eligible_for_ACE":false,"grading_policy_normal":"","ace_open_date":null,"signature_track_last_refund_date":null,"home_link":"https://class.coursera.org/scicomp-002/","creator_id":1109500,"proctored_exam_completion_date":null,"university_logo":null,"signature_track_close_time":null,"auth_review_completion_date":null}],"about_the_instructor":"","university_logo":"","course-ids":[318,971143],"display":true,"recommended_background":"<p>Experience writing and debugging computer programs is required :\n    <br>Preferably experience with scientific, mathematical, or statistical computing,\n    for example in Matlab or R. (Previous knowledge of Fortran, Python, or\n    parallel computing languages is not assumed.)</p>\n<p>Students should also be comfortable with undergraduate mathematics, particularly\n    calculus and linear algebra, which is pervasive in scientific computing\n    applications. Many of the examples used in lectures and assignments will\n    require this background. Past exposure to numerical analysis is a plus.</p>\n<p>All of the software used in this course is open source and freely available.\n    A Virtual Machine will be provided that can be used to create a Linux desktop\n    environment (with all of the required software pre-installed) that can\n    be run on any operating system using the free VirtualBox software. An Amazon\n    Web Services AMI will also be provided to allow doing the course work in\n    the cloud.</p>"}

