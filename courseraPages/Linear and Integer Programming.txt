{"about_the_course":"<div><p>Linear Programming (LP) is arguably one of the most important optimization problems in applied mathematics and engineering. The Simplex algorithm to solve linear programs is widely regarded as one among the \"<a href=\"http://www.siam.org/pdf/news/637.pdf\">top ten</a>\"\u00a0algorithms of the 20th century. Linear Programs arise in almost all fields of engineering including operations research, statistics, machine learning, control system design, scheduling, formal verification\u00a0and computer vision. It forms the basis for numerous approaches to solving hard combinatorial optimization problems through randomization and approximation.</p><p><br></p><p>The primary goals of this course\u00a0will be to:</p><p>1. Understand the basic theory behind LP, algorithms to solve LPs, and the basics of (mixed) integer programs.</p><p>2. Understand important and emerging applications of LP to economic problems (optimal resource allocation, scheduling problems), machine learning (SVM), control design (finite horizon optimal control, dynamic programming), and formal verification (ranking functions, symbolic execution, SMT solvers).</p><p>At the end of the course, the successful student will be able to cast various problems that may arise in her research as optimization problems, understand the cases where the optimization problem will be linear, choose appropriate solution methods and interpret results appropriately.<i> This is generally considered a useful ability in many research areas.</i></p></div><div></div><div><br></div>","subtitle_languages_csv":"","other_description":"","photo":"https://coursera-course-photos.s3.amazonaws.com/da/f9b75dd249e7cf7b851148e4bdf543/lpLogo.png","preview_link":null,"small_icon_hover":"https://coursera-course-photos.s3.amazonaws.com/36/fc3ac9d321e5e628016bfeb089e91d/lpLogo.png","large_icon":"https://coursera-course-photos.s3.amazonaws.com/2e/414d8161b8ce374fc7c61d4853a9d6/lpLogo.png","video":"1ZPaTI5e128","university-ids":["boulder","cusystem"],"video_baseurl":"https://d1a2y8pfnfh44t.cloudfront.net/1ZPaTI5e128/","id":480,"universities":[{"rectangular_logo_svg":null,"wordmark":null,"website_twitter":"cuboulder","china_mirror":1,"favicon":"","website_facebook":"cuboulder","logo":"","background_color":"","id":71,"location_city":"Boulder","location_country":"US","location_lat":40.01498560000000000,"location":"","primary_color":"#605221","abbr_name":"CU-Boulder","website":"http://www.colorado.edu/","description":"CU-Boulder is a dynamic community of scholars and learners on one of the most spectacular college campuses in the country. As one of 34 U.S. public institutions in the prestigious Association of American Universities (AAU), we have a proud tradition of academic excellence, with five Nobel laureates and more than 50 members of prestigious academic academies.","short_name":"boulder","landing_page_banner":"https://coursera-university-assets.s3.amazonaws.com/10/9d3ba8ae3faa6f06e7dbe7cf12aa04/banner_CUBoulder.jpg","mailing_list_id":null,"website_youtube":"cuboulder","partner_type":1,"banner":"","location_state":"CO","name":"University of Colorado Boulder","square_logo":"https://coursera-university-assets.s3.amazonaws.com/bb/16e85962a963ab3546196705d25865/CUBoulder_360x360.png","square_logo_source":"https://coursera-university-assets.s3.amazonaws.com/89/01888ab8988a645b839dc3e84c3726/CUBoulder_360x360.png","square_logo_svg":"","location_lng":-105.27054559999999000,"home_link":null,"class_logo":"https://coursera-university-assets.s3.amazonaws.com/37/854a51d4b899dde9badf91ac20d4cf/CUBoulder_Course200x48.png","display":true},{"rectangular_logo_svg":"","wordmark":null,"website_twitter":"","china_mirror":1,"favicon":"","website_facebook":"","logo":"","background_color":"","id":126,"location_city":"Denver","location_country":"US","location_lat":39.73756700000000000,"location":"Denver, CO","primary_color":"","abbr_name":"CU System","website":"","description":"The University of Colorado is a recognized leader in higher education on the national and global stage.  We collaborate to meet the diverse needs of our students and communities.  We promote innovation, encourage discovery and support the extension of knowledge in ways unique to the state of Colorado and beyond.","short_name":"cusystem","landing_page_banner":"https://coursera-university-assets.s3.amazonaws.com/40/7f8dc97c973fcd38a4d202c143f2a9/cu-bkg-coursera.jpg","mailing_list_id":null,"website_youtube":"","partner_type":2,"banner":"","location_state":"CO","name":"University of Colorado System","square_logo":"https://coursera-university-assets.s3.amazonaws.com/f1/a2499d0ac4022c29dc08466656ba71/logogreybground.png","square_logo_source":"https://coursera-university-assets.s3.amazonaws.com/e8/eccb645bf2f8085dc6280223d07322/logogreybground.jpg","square_logo_svg":"","location_lng":-104.98471790000002000,"home_link":"","class_logo":"","display":true}],"self_service_course_id":null,"short_description":"This course will cover the very basic ideas in optimization. Topics include the basic theory and algorithms behind linear and integer linear programming along with some of the important applications. We will also explore the theory of convex polyhedra using linear programming.\n","description":"","short_name":"linearprogramming","target_audience":1,"faq":"<ul><li>Will I get a statement of accomplishment after completing this class?</li></ul>Yes, students who complete the assignments and score a minimum percentage in the quizzes will be given a statement of accomplishment.<br><br><ul><li>What textbooks will I need for this class?</li></ul>No textbook is officially required. However, there are numerous great textbooks on this topic. We are hoping you will be able to find one. You can always cross check whether your textbook has adequate coverage for the topics to be taught in this class.\u00a0<br><br>We recommend a classic textbook by Chvatal titled \"Linear Programming\". A more recent text by Vanderbei (see <a href=\"http://www.princeton.edu/~rvdb/LPbook/\" target=\"_blank\" title=\"Link: http://www.princeton.edu/~rvdb/LPbook/\">http://www.princeton.edu/~rvdb/LPbook/</a>)\u00a0is also an\u00a0excellent textbook. It\u00a0may be\u00a0available as a download from Springer or some of you whose organization subscribes to Springer Online. \u00a0<br><br><ul><li>Can I get course credits for this class?</li></ul>Unfortunately, not at this time. University of Colorado, Boulder may be\u00a0considering ways of recognizing Coursera classes,\u00a0but there is no consensus at this point in time.<br><br>However, Prof. Sankaranarayanan is\u00a0teaching an on-campus class (CSCI 5654, fall 2013) at the University of Colorado, Boulder, and it will be available simultaneously on-line for credit through CAETE (see\u00a0<a href=\"http://cuengineeringonline.colorado.edu/\" target=\"_blank\">http://cuengineeringonline.colorado.edu/</a>\u00a0). You can enroll for our class CSCI 5654 through CAETE from anywhere in the world. This version will run through fall 2013 and have weekly assignments/exams.\u00a0<br><br><ul><li>How theoretical does this class get: are we going to do rigorous mathematical proofs? How much programming do you expect to do?\u00a0</li></ul>These questions are a little harder to answer: Sriram Sankaranarayanan's background is in theoretical computer science,\u00a0while Shalom is a mechanical engineer. We would like to present the theory that underlies linear programming: it is very rich and elegant. Furthermore,\u00a0if you would like to go beyond using LP solvers as a black box, we highly recommend that you understand\u00a0the theory and algorithms\u00a0behind these solvers. But the course will de-emphasize doing rigorous proofs, and emphasize gaining an understanding that enables the student to carry out these proofs when necessary. <br><br>Programming skills tend to vary.\u00a0We expect students to be able to program some of the algorithms we teach them. But it is very hard to grade programs, and provide meaningful feedback on them. Therefore, the programming of the algorithms will\u00a0be an optional component to this course.\u00a0We ourselves will post programs and data files. We will hope that these are of some use to students wishing to write their own code. We will have discussions that will facilitate this aspect of the class.<br><br>Some assignments may require the student to setup and\u00a0solve LPs using a computer. We hope that will not present a problem. We will support open source software such as GNUs\u00a0GLPK that will be easy to install and easy to work with. However, students with access to Matlab or who wish to solve LPs\u00a0through APIs\u00a0in languages like python, C/C++, Java, Scala\u00a0or OCaml will receive our support, to the best of our abilities.<br><br>","category-ids":["cs-theory","economics","ee"],"visibility":0,"course_syllabus":"<p><b>DRAFT SYLLABUS\u00a0</b><br></p><b>Week #1:\u00a0<br></b><ul><li>Introduction to Linear Programming.</li><li>The Diet Problem.</li><li>Linear Programming Formulations.</li><li>How to Solve Linear Programs</li><li>Tutorials on using GLPK (AMPL), Matlab, CVX and Microsft Excel.</li></ul><b>Week #2:\u00a0</b><br><ul><li>The Simplex Algorithm (basics).</li></ul><b>Week #3:</b><br><ul><li>More details on Simplex: Handling unbounded problems.</li><li>Initialization Phase Simplex.</li><li>Cycling and the Use of Bland's rule.</li><li>Complexity of Simplex.</li><li><i>Extra-Extra:</i> The revised simplex method.</li></ul><b>Week #4:</b><br><ul><li>Duality: dual variables and dual linear program.</li><li>Strong duality theorem.</li><li>Complementary Slackness.\u00a0</li><li>KKT conditions for Linear Programs.</li><li>Understanding the dual problem: shadow costs.</li></ul><b>Week #5:\u00a0</b><br><ul><li>Advanced LP formulations: norm optimization.</li><li>Least squares, and quadratic programming.</li><li>Applications #1: Signal reconstruction and Denoising.</li><li>Applications #2: Regression, Classification and Machine Learning.</li><li><i>Extra-Extra: Model-Predictive Control Problems.</i></li></ul><b>Week #6:\u00a0</b><br><ul><li>Integer Linear Programming.</li><li>Integer vs. Real-valued variables.</li><li>NP-completeness: a very basic introduction.</li><li>Branch-and-Bound Methods.</li><li>Cutting Plane Methods.</li></ul><b>Weeks #7 - #9:</b><br><ul><li>Interior point methods.<br></li><li>Applications to Network flow problems.<br></li><li>Applications to analysis of computational systems: proving termination, symbolic execution.<br></li><li>Application to solving puzzles (Sudoku).<br></li><li><i>Extra-Extra:\u00a0</i>Satisfiability Modulo Theory (SMT) solvers.</li></ul>","course_format":"Each class will consist of many short lecture videos between 10-15 minutes in length inter mingled with assessments. There are optional programming exercises that will involve building LP and ILP solvers.<br><br>The course will be structured with two interactive tracks: algorithms/theory for linear optimization problems and applications. The applications will include ideas on modeling real-life optimization problems as linear programs and the appropriate use of concepts like duality in finding and interpreting solutions.","has_full_data":true,"small_icon":"https://coursera-course-photos.s3.amazonaws.com/36/fc3ac9d321e5e628016bfeb089e91d/lpLogo.png","suggested_readings":"<p><b>No textbook is required. But, if the student has access to one it can help a lot.</b><br></p><p><strong>Optional Textbook #1:</strong>\u00a0<a href=\"http://www.amazon.com/Linear-Programming-Series-Mathematical-Sciences/dp/0716715872\" title=\"Link: http://www.amazon.com/Linear-Programming-Series-Mathematical-Sciences/dp/0716715872\">Linear Programming by Vasek Chvatal, W.H. Freeman</a> published, 1983. This book still remains a very clear and concise presentation.\u00a0</p><p><strong>Alternate Textbook:</strong>\u00a0<a href=\"http://www.tqlkg.com/click-7115529-10692263?sid=linearprogramming&URL=http://www.chegg.com/textbooks/9780387743875\" title=\"Link: http://www.tqlkg.com/click-7115529-10692263?sid=linearprogramming&URL=http://www.chegg.com/textbooks/9780387743875\">Linear Programming by Robert J. Vanderbei </a>(available online through Springer-Link).</p><p><b>Other texts: </b>We may borrow material that is covered in some of the<b>\u00a0</b>texts below. As you go down this list, the texts become less relevant for this class but remain very important for the broader field of optimization that we seek to introduce through this class.</p><ol><li><a href=\"http://www.amazon.com/Combinatorial-Optimization-Algorithms-Complexity-Computer/dp/0486402584\" target=\"_blank\" title=\"Link: http://www.amazon.com/Combinatorial-Optimization-Algorithms-Complexity-Computer/dp/0486402584\">Combinatorial optimization: Algorithms & Complexity</a>, by Christos Papadimitrou and Ken Steglitz.</li><li><a href=\"http://www.amazon.com/dp/0387948333\" target=\"_blank\">Linear Programming</a>\u00a0series of two books\u00a0by G.B. Danzig and M.K. Thapa.<br></li><li>Schrijver's book on the <i><a href=\"http://www.amazon.com/Theory-Integer-Programming-Alexander-Schrijver/dp/0471982326\" target=\"_blank\">Theory of Integer Linear Programming and Integer</a>, I<a href=\"http://www.amazon.com/Integer-Combinatorial-Optimization-Laurence-Wolsey/dp/0471359432\" target=\"_blank\" title=\"Link: http://www.amazon.com/Integer-Combinatorial-Optimization-Laurence-Wolsey/dp/0471359432\">nteger and\u00a0Combinatoral Optimization</a> </i>book by Wolsey and\u00a0Nemhauser are also good references.\u00a0<br></li><li><i><a href=\"http://www.stanford.edu/~boyd/cvxbook/\" target=\"_blank\">Convex Optimization</a></i> by Boyd and Vandenbreghe is a good reference for the more general area of convex optimization.</li><li><i><a href=\"http://www.amazon.com/dp/0387303030\" target=\"_blank\">Numerical Optimization</a></i> by Nocedal and Wright is a great reference for solving non-linear optimization problems.\u00a0</li></ol>","instructor":"Sriram Sankaranarayanan","categories":[{"id":1,"name":"Computer Science: Theory","mailing_list_id":null,"short_name":"cs-theory","description":"Our wide range of courses allows students to explore topics from many different fields of study. Sign up for a class today and join our global community of students and scholars!"},{"id":2,"name":"Economics & Finance","mailing_list_id":null,"short_name":"economics","description":"Our wide range of courses allows students to explore topics from many different fields of study. Sign up for a class today and join our global community of students and scholars!"},{"id":15,"name":"Engineering","mailing_list_id":null,"short_name":"ee","description":"Our wide range of courses allows students to explore topics from many different fields of study. Sign up for a class today and join our global community of students and scholars!"}],"estimated_class_workload":"5-7 hours/week","name":"Linear and Integer Programming","language":"en","university_logo_st":"","video_id":null,"courses":[{"grading_policy_distinction":"The final grade was based on three criteria: programming assignments (35% of the grade), weekly assignments  (40% of the grade) and a multiple choice exam (25%). To earn a statement of distinction, we expect the student to perform well on all  the three criteria, adding up to at least 85% of the maximum score.","ace_track_price_display":null,"signature_track_certificate_design_id":null,"ace_semester_hours":null,"start_day":2,"duration_string":"9 weeks","signature_track_last_chance_time":null,"signature_track_additional_notes":"","certificate_ready_user_id":2638701,"id":970667,"start_month":9,"certificate_description":"The course introduces the fundamentals of  optimization through linear  and integer programming. Students learn the material by solving problems using existing solvers and then  writing their own solvers to obtain an in-depth knowledge of the techniques involved.","start_date_string":null,"chegg_session_id":"","signature_track_regular_price":null,"grades_release_date":"2013-11-15","certificates_ready":true,"signature_track_price":null,"statement_design_id":140,"signature_track_registration_open":false,"topic_id":480,"eligible_for_signature_track":false,"start_date":null,"status":1,"start_year":2013,"signature_track_certificate_combined_signature":"","end_date":null,"notified_subscribers":true,"instructors":[2673267,3543489],"end_of_class_emails_sent":"2013-11-15","active":true,"eligible_for_certificates":true,"signature_track_certificate_signature_blurb":"","deployed":true,"ace_close_date":null,"name":"001","textbooks":[],"signature_track_open_time":null,"eligible_for_ACE":false,"grading_policy_normal":"The final grade was based on three criteria: programming assignments (35% of the grade), weekly assignments  (40% of the grade) and a multiple choice exam (25%). To earn a statement of accomplishment, students have  to perform above par on two out the three criteria, adding up to at least 30% of the maximum score.","ace_open_date":null,"signature_track_last_refund_date":null,"home_link":"https://class.coursera.org/linearprogramming-001/","creator_id":181612,"proctored_exam_completion_date":null,"university_logo":null,"signature_track_close_time":null,"auth_review_completion_date":"2013-11-16"},{"grading_policy_distinction":"","ace_track_price_display":null,"signature_track_certificate_design_id":null,"ace_semester_hours":null,"start_day":null,"duration_string":"9 weeks","signature_track_last_chance_time":null,"signature_track_additional_notes":null,"certificate_ready_user_id":null,"id":971263,"start_month":null,"certificate_description":"","start_date_string":null,"chegg_session_id":"","signature_track_regular_price":null,"grades_release_date":null,"certificates_ready":false,"signature_track_price":null,"statement_design_id":null,"signature_track_registration_open":false,"topic_id":480,"eligible_for_signature_track":null,"start_date":null,"status":0,"start_year":null,"signature_track_certificate_combined_signature":"","end_date":null,"notified_subscribers":false,"instructors":[2673267,3543489],"end_of_class_emails_sent":null,"active":false,"eligible_for_certificates":true,"signature_track_certificate_signature_blurb":"","deployed":true,"ace_close_date":null,"name":"002","textbooks":[],"signature_track_open_time":null,"eligible_for_ACE":null,"grading_policy_normal":"","ace_open_date":null,"signature_track_last_refund_date":null,"home_link":"https://class.coursera.org/linearprogramming-002/","creator_id":2673267,"proctored_exam_completion_date":null,"university_logo":null,"signature_track_close_time":null,"auth_review_completion_date":null}],"about_the_instructor":"","university_logo":"","course-ids":[970667,971263],"display":true,"recommended_background":"Mathematical Maturity (undergraduate algorithms or CS theory) and basic programming ability. <br><br>A background in engineering or applied sciences could be useful, as well."}

